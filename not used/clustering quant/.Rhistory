data("iris") #load the built-in iris dataset
df = iris[, 1:4] #remove the species feature
head(df) #print the first rows
library(ggplot2) #create nice graphs
plot1 = ggplot(df, aes(x=df$Sepal.Length, y=df$Sepal.Width)) + geom_point()
plot2 = ggplot(df, aes(x=df$Sepal.Length, y=df$Petal.Length)) + geom_point()
plot3 = ggplot(df, aes(x=df$Sepal.Length, y=df$Petal.Width)) + geom_point()
plot4 = ggplot(df, aes(x=df$Sepal.Width, y=df$Petal.Length)) + geom_point()
plot5 = ggplot(df, aes(x=df$Sepal.Width, y=df$Petal.Width)) + geom_point()
plot6 = ggplot(df, aes(x=df$Petal.Length, y=df$Petal.Width)) + geom_point()
library(ggpubr) #plot multiple graphs at the same time
ncol = 2 #we will plot 2 graphs at a time
ggarrange(plot1, plot2, ncol=ncol)
ggarrange(plot3, plot4, ncol=ncol)
ggarrange(plot5, plot6, ncol=ncol)
library(FactoMineR)
pca_results = PCA(df, graph = FALSE) #apply PCA (by default the function scale the variables)
library(factoextra)
fviz_pca_ind(pca_results)
df$Sepal.Length[1] #position of the 1st observation of the iris data set on the Sepal.Length variable
df$Sepal.Width[1] #position of the 1st observation of the iris data set on the Sepal.Width variable
df$Sepal.Length[2] #position of the 2nd observation of the iris data set on the Sepal.Length variable
df$Sepal.Width[2] #position of the 2nd observation of the iris data set on the Sepal.Width variable
i1 = df[1,1:2] #subset the 1st observation and the 2 first variables (about Sepal)
i2 = df[2,1:2] #subset the 2nd observation and the 2 first variables (about Sepal)
temp_df = rbind(i1, i2)
temp_df = df[c(1:2), c(1:2)]
dist(temp_df, method = "euclidean") #compute euclidean distance between i1 and i2
distances_matrix = dist(df, method = "euclidean") #save all the distances
scaled_df = scale(df)
scaled_distance_matrix = dist(scaled_df, method = "euclidean")
hca = hclust(scaled_distance_matrix, method = "ward.D")
fviz_dend(hca)
qplot(c(1:10), sort(hca$height, decreasing = TRUE)[1:10]) +
geom_line() +
xlab("Number of cluster") +
ylab("Explained inertia") +
ggtitle("Scree Plot")
View(df)
scaled_df = scale(df)
scaled_df = as.data.frame(scaled_df)
scaled_distance_matrix = dist(scaled_df, method = "euclidean")
hca = hclust(scaled_distance_matrix, method = "ward.D")
fviz_dend(hca)
#add a group feature to the data set
group_labels = cutree(hca, k = 3)
scaled_df$group = group_labels
scaled_df$group = as.factor(scaled_df$group)
results = PCA(scaled_df, quali.sup=10, graph = FALSE)
#add a group feature to the data set
group_labels = cutree(hca, k = 3)
scaled_df$group = group_labels
scaled_df$group = as.factor(scaled_df$group)
results = PCA(scaled_df, quali.sup=5, graph = FALSE) #indicates that we want the cluster variable as a supplementary variable, for the graph
"a" + "b"
fviz_pca_var(results, axes = c(1,2), repel = TRUE)
View(iris)
